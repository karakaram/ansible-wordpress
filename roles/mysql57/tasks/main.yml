- name: install mysql-community repository
  yum:
    name: "http://dev.mysql.com/get/mysql57-community-release-el{{ os.version }}-9.noarch.rpm"
  tags:
    - mysql

- name: enable mysql5.7
  ini_file:
    dest: /etc/yum.repos.d/mysql-community.repo
    section: "{{ item }}"
    option: enabled
    value: 1
  with_items:
    - mysql57-community
  tags:
    - mysql

- name: install MySQL community server
  yum:
    name: "{{ item }}"
    state: present
  with_items:
      - mysql-community-server
      - MySQL-python
  tags:
    - mysql

- name: copy my.cnf for global
  template:
    src: my.cnf.j2
    dest: /etc/my.cnf
  tags:
    - mysql

- name: create log directory
  file:
    path: /var/log/mysql
    state: directory
    mode: 0755
    owner: mysql
    group: mysql
    recurse: yes
  tags:
    - mysql

- name: register status of slow.log
  stat:
    path: /var/log/mysql/slow.log
  register: f
  tags:
    - mysql

- name: create slow.log
  file:
    path: /var/log/mysql/slow.log
    state: touch
    owner: mysql
    group: mysql
    mode: 0644
  when: not f.stat.exists
  tags:
    - mysql

- name: start mysqld and enabled at boot
  service:
    name: mysqld
    state: started
    enabled: yes
  tags:
    - mysql

- name: get default root password
  shell: grep 'A temporary password' /var/log/mysqld.log | awk '{ print $NF }' | head -n 1
  register: mysql_default_root_password
  changed_when: False
  tags:
    - mysql

- name: debug default_root_password
  debug:
    var: mysql_default_root_password.stdout_lines
  when: mysql_default_root_password | success
  tags:
    - mysql

- name: check login for mysql with default root password
  shell: "mysqladmin ping -uroot -p\"{{ mysql_default_root_password.stdout }}\""
  register: login_result_using_default_root_password
  failed_when: False
  changed_when: False
  tags:
    - mysql

- name: debug login_result_using_default_root_password
  debug:
    var: login_result_using_default_root_password
  tags:
    - mysql

- name: can login using default root password
  set_fact:
    can_login_using_default_root_password: "{{ login_result_using_default_root_password.stderr.find('Access denied') == -1 }}"
  when: login_result_using_default_root_password is defined
  tags:
    - mysql

- name: debug login_result_using_default_root_password
  debug:
    var: can_login_using_default_root_password
  tags:
    - mysql

- name: set validate_password_policy to LOW
  shell: "mysql --connect-expired-password -uroot -p\"{{ mysql_default_root_password.stdout }}\" -e '{{ item }}'"
  with_items:
    - "SET GLOBAL validate_password_length = 6"
    - "SET GLOBAL validate_password_mixed_case_count = 0"
    - "SET GLOBAL validate_password_number_count = 0"
    - "SET GLOBAL validate_password_special_char_count = 0"
    - "SET GLOBAL validate_password_policy = 'LOW'"
  when: can_login_using_default_root_password
  tags:
    - mysql

- name: set mysql root password
  shell: "mysql --connect-expired-password -uroot -p\"{{ mysql_default_root_password.stdout }}\" -e \"ALTER USER root@'localhost' IDENTIFIED BY '{{ mysql.root_password }}'\""
  when: can_login_using_default_root_password
  tags:
    - mysql

- name: copy my.cnf for root user
  template:
    src: root-my.cnf.j2
    dest: /root/.my.cnf
  tags:
    - mysql

- name: copy my.cnf for work user
  template:
    src: user-my.cnf.j2
    dest: /home/{{ user.name }}/.my.cnf
  tags:
    - mysql

- name: create database
  mysql_db:
    name: "{{ item.name }}"
    state: present
    login_user: root
  with_items:
    - "{{ mysql_databases }}"
  tags:
    - mysql

- name: create work user
  mysql_user:
    name: "{{ mysql.user }}"
    password: "{{ mysql.password }}"
    host: localhost
    append_privs: true
    priv: "{{ item.priv }}"
    state: present
    login_user: root
  with_items:
    - "{{ mysql_databases }}"
  tags:
    - mysql

- name: copy logrotate
  template:
    src: logrotate-mysql.j2
    dest: /etc/logrotate.d/mysql
  tags:
    - mysql